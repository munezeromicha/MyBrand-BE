mongodb+srv://jabo:jabo2424@todocluster.xj5bvwj.mongodb.net/?retryWrites=true&w=majority

mongodb+srv://Michel:Munezero2003!@cluster0.myym3lt.mongodb.net/?retryWrites=true&w=majority

https://skerritt.blog/

https://cyberomin.github.io/

https://bloggingfordevs.com/software-blogs/


everyday meeting: https://meet.google.com/ptp-xgqc-gru

One to One meeting: https://whenavailable.com/reply?sid=UxnggcEhzRHNozsQPkZs&uid=ftXEMUrc5hRmSD8GHXyy
312513



my-Brand: https://munezeromicha.github.io/My-BRAND-Michel/

netlify admin-dashboard: https://65b27fcad93ad4931f4aeb24--bright-travesseiro-a5d1fa.netlify.app/

Admin-dashboard: https://munezeromicha.github.io/Admin-Dashboard/

google piechart: style="width: 900px; height: 500px;"

"Pressure makes diamonds" from joshua Tahinduka ATLP




[11:39] Joshua Tahinduka
Group 1: Define Communication in the context of our work at ATLP. What is the cost of poor communication to professionals and organizations?

>Effective Communication:

1-using proper tools like trello and slack
2- giving clear info and updates on progress
3- consistency
4-clear documentation
5- honesty
6- code reviews



regural expression for email: /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;








## beginning js codes ##

    // function createCard(id, data){
    //     const card = document.createElement("div");
    //     card.classList.add("card");
    //     card.dataset.id = id;
    //     card.innerHTML = `
    //     <span>${data}</span>
    //     <button class="edit-btn">Edit</button>
    //     <button class="delete-btn">Delete</button>
    //     `;
    //     cardContainer.appendChild(card);
    // }

    //dataForm.addEventListener("submit", function(event) {
        // event.preventDefault(); // Prevent default form submission
    
        // const inputData = uniqueField.value.trim();
        // if (inputData !== "") {
        //   // Save data to local storage
        //   // const id = Date.now(); // Generate a unique ID
        //   localStorage.setItem(inputData);
        //   // Create a card with the entered data
        //   createCard(inputData);
    
        //   // Clear input field
        //   uniqueField.value = "";
        // } 
        // else {
        //   alert("Please enter some data.");
        // }
      //});

        // Function to handle edit action
  // function editCard(card) {
  //   const span = card.querySelector("span");
  //   const editedData = prompt("Enter the new data:", span.textContent);
  //   if (editedData !== null) {
  //     const id = card.dataset.id;
  //     localStorage.setItem(id, editedData);
  //     span.textContent = editedData;
  //   }
  // }

  // // Function to handle delete action
  // function deleteCard(card) {
  //   const id = card.dataset.id;
  //   localStorage.removeItem(id);
  //   card.remove();
  // }

  // // Event delegation for edit and delete buttons
  // cardContainer.addEventListener("click", function(event) {
  //   const target = event.target;
  //   if (target.classList.contains("edit-btn")) {
  //     const card = target.closest(".card");
  //     editCard(card);
  //   } else if (target.classList.contains("delete-btn")) {
  //     const card = target.closest(".card");
  //     deleteCard(card);
  //   }
  // });

  // Display existing data from local storage
  // for (let i = 0; i < localStorage.length; i++) {
  //   const id = localStorage.key(i);
  //   const data = localStorage.getItem(id);
  //   createCard(id, data);
  // }

    // if(oneTitle === ''){
    //     verError(oneField, 'Title field is required!');
    // } else if(oneTitle < 8){
    //     verError(oneField, 'username must not be less than 8 character')
    // }
    // else{
    //     verPass(oneField);

    // }
    // to Check if a file is selected


    // Check if the selected file is an image
    // var file = photoInput.files[0];
    // if (!file.type.match('image.*')) {
    //     // errorMessage.textContent = "Please select an image file.";
    //     verError(photoInput, 'Please select an image file!')
    // }

## End ## 